package com.synergisticit.config;

import java.util.Properties;

import javax.sql.DataSource;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.ComponentScan;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.PropertySource;
import org.springframework.jdbc.datasource.DriverManagerDataSource;
import org.springframework.core.env.Environment;
import org.springframework.core.env.PropertyResolver;
import org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean;
import org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter;

@Configuration
@PropertySource("classpath:a.properties")   // NEW
@ComponentScan(basePackages = "com.synergisticit")  // NEW
public class AppConfig {
	@Autowired
	private Environment env;
	
	@Bean
	public DataSource dataSource() {
		DriverManagerDataSource dataSource  = new DriverManagerDataSource();
		dataSource.setDriverClassName(env.getProperty("driverClassName"));
		dataSource.setUrl(env.getProperty("url"));
		dataSource.setUsername(env.getProperty("username"));
		dataSource.setPassword(env.getProperty("password"));
		
		return dataSource;
	}
	
		@Bean
		public LocalContainerEntityManagerFactoryBean entityManagerFactory() {
		    LocalContainerEntityManagerFactoryBean emf = new LocalContainerEntityManagerFactoryBean();
		    emf.setDataSource(dataSource());
		    emf.setPackagesToScan("com.synergisticit.domain");
		    emf.setJpaVendorAdapter(new HibernateJpaVendorAdapter());

		    Properties props = new Properties();
		    props.setProperty("hibernate.hbm2ddl.auto", "update");   // or validate/create-drop
		    props.setProperty("hibernate.dialect", env.getProperty("dialect"));
		    emf.setJpaProperties(props);

		    return emf;
		
	}
}
