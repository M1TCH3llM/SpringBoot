package com.synergisticit.config;



import java.util.Properties;

import javax.sql.DataSource;

import org.hibernate.SessionFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.ComponentScan;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.ImportResource;
import org.springframework.context.annotation.PropertySource;
import org.springframework.core.env.Environment;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;
import org.springframework.jdbc.datasource.DriverManagerDataSource;
import org.springframework.orm.hibernate5.LocalSessionFactoryBean;
import org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean;
import org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter;


@ComponentScan(basePackages = {"com.synergisticit"})
@PropertySource(value="classpath:db.properties")
@Configuration
public class AppConfig {
	
	SessionFactory sessionFactory;
	
	@Autowired
	Environment env; //Environment in which current application is running
	
	/*
	@Value(value="${url}")
	String url;
	
	@Value(value="${driver}")
	String driver;
	
	@Value(value="${myUsername}")
	String user;
	
	@Value(value="${myPassword}")
	String pass;
	*/
	
	@Bean
	public DataSource dataSource() {
		DriverManagerDataSource dataSource  = new DriverManagerDataSource();
		
		dataSource.setUrl(url);
		System.out.println(url);
		dataSource.setDriverClassName(driver);
		dataSource.setUsername("admin");
		dataSource.setPassword("Rb26Dett");
		
		
		dataSource.setUrl(env.getProperty("url"));
		System.out.println(env.getProperty("url"));
		dataSource.setDriverClassName(env.getProperty("driver"));
		dataSource.setUsername(env.getProperty("myUsername"));
		dataSource.setPassword(env.getProperty("myPassword"));
		
		return dataSource;
	}
	
	
	@Bean
	public JdbcTemplate jdbcTemplate() {
		JdbcTemplate jdbcTemplate = new JdbcTemplate();
		jdbcTemplate.setDataSource(dataSource());
		
		return jdbcTemplate;
	}
	
	@Bean
	NamedParameterJdbcTemplate namedParameterJdbcTemplate () {
		NamedParameterJdbcTemplate npjt = new NamedParameterJdbcTemplate(dataSource());
				return npjt;
	}
	
	@Bean
	LocalSessionFactoryBean sessionFactory() {
		LocalSessionFactoryBean sessionFactory = new LocalSessionFactoryBean();
		sessionFactory.setDataSource(dataSource());
		sessionFactory.setPackagesToScan("com.synergisticit");
		sessionFactory.setAnnotatedPackages("com.synergisticit.domain");
		sessionFactory.setAnnotatedClasses(Employee.class);
		sessionFactory.setHibernateProperties(properties());
		return sessionFactory;
	}
	
	@Bean
	LocalContainerEntityManagerFactoryBean entityManagerFactory() {
		LocalContainerEntityManagerFactoryBean emf = new LocalContainerEntityManagerFactoryBean();
		emf.setDataSource(dataSource());
		emf.setPackagesToScan("com.synergisticit.domain");
		emf.setJpaProperties(properties());
		emf.setJpaVendorAdapter(new HibernateJpaVendorAdapter());
		return emf;
		
	}
	
	//Properties common to both LocalSessionFactoryBean as well to LocalContainerEntityManagerFactorBean
	Properties properties() {
		Properties properties = new Properties();
		properties.setProperty("hibernate.hbm2.ddl.auto", "update");
		properties.setProperty("hibernate.show_SQL", "true");
		properties.setProperty("hibernate.hibernate.dialect", "org.hibernate.dialect.MySQLDialect");
		return properties;
	}

}